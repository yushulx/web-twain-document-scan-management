/*!
 * Dynamsoft JavaScript Library
 * @product Dynamsoft Capture Vision Router JS Edition
 * @website http://www.dynamsoft.com
 * @copyright Copyright 2024, Dynamsoft Corporation
 * @author Dynamsoft
 * @version "2.0.30"
 * @fileoverview Dynamsoft JavaScript Library for Capture Vision
 * More info on cvr JS: https://www.dynamsoft.com/capture-vision-router/sdk-javascript/
 */
!function(){"use strict";var e,t,_;async function s(e,t){return await new Promise(((_,s)=>{let r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType=t,r.send(),r.onloadend=async()=>{_(r.response)},r.onerror=()=>{s(new Error("Network Error: "+r.statusText))}}))}!function(e){e[e.IRUT_NULL=0]="IRUT_NULL",e[e.IRUT_COLOUR_IMAGE=1]="IRUT_COLOUR_IMAGE",e[e.IRUT_SCALED_DOWN_COLOUR_IMAGE=2]="IRUT_SCALED_DOWN_COLOUR_IMAGE",e[e.IRUT_GRAYSCALE_IMAGE=4]="IRUT_GRAYSCALE_IMAGE",e[e.IRUT_TRANSOFORMED_GRAYSCALE_IMAGE=8]="IRUT_TRANSOFORMED_GRAYSCALE_IMAGE",e[e.IRUT_ENHANCED_GRAYSCALE_IMAGE=16]="IRUT_ENHANCED_GRAYSCALE_IMAGE",e[e.IRUT_PREDETECTED_REGIONS=32]="IRUT_PREDETECTED_REGIONS",e[e.IRUT_BINARY_IMAGE=64]="IRUT_BINARY_IMAGE",e[e.IRUT_TEXTURE_DETECTION_RESULT=128]="IRUT_TEXTURE_DETECTION_RESULT",e[e.IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE=256]="IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE",e[e.IRUT_TEXTURE_REMOVED_BINARY_IMAGE=512]="IRUT_TEXTURE_REMOVED_BINARY_IMAGE",e[e.IRUT_CONTOURS=1024]="IRUT_CONTOURS",e[e.IRUT_LINE_SEGMENTS=2048]="IRUT_LINE_SEGMENTS",e[e.IRUT_TEXT_ZONES=4096]="IRUT_TEXT_ZONES",e[e.IRUT_TEXT_REMOVED_BINARY_IMAGE=8192]="IRUT_TEXT_REMOVED_BINARY_IMAGE",e[e.IRUT_CANDIDATE_BARCODE_ZONES=16384]="IRUT_CANDIDATE_BARCODE_ZONES",e[e.IRUT_LOCALIZED_BARCODES=32768]="IRUT_LOCALIZED_BARCODES",e[e.IRUT_SCALED_UP_BARCODE_IMAGE=65536]="IRUT_SCALED_UP_BARCODE_IMAGE",e[e.IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE=131072]="IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE",e[e.IRUT_COMPLEMENTED_BARCODE_IMAGE=262144]="IRUT_COMPLEMENTED_BARCODE_IMAGE",e[e.IRUT_DECODED_BARCODES=524288]="IRUT_DECODED_BARCODES",e[e.IRUT_LONG_LINES=1048576]="IRUT_LONG_LINES",e[e.IRUT_CORNERS=2097152]="IRUT_CORNERS",e[e.IRUT_CANDIDATE_QUAD_EDGES=4194304]="IRUT_CANDIDATE_QUAD_EDGES",e[e.IRUT_DETECTED_QUADS=8388608]="IRUT_DETECTED_QUADS",e[e.IRUT_LOCALIZED_TEXT_LINES=16777216]="IRUT_LOCALIZED_TEXT_LINES",e[e.IRUT_RECOGNIZED_TEXT_LINES=33554432]="IRUT_RECOGNIZED_TEXT_LINES",e[e.IRUT_NORMALIZED_IMAGES=67108864]="IRUT_NORMALIZED_IMAGES",e[e.IRUT_ALL=134217727]="IRUT_ALL"}(e||(e={})),function(e){e[e.CRIT_ORIGINAL_IMAGE=1]="CRIT_ORIGINAL_IMAGE",e[e.CRIT_BARCODE=2]="CRIT_BARCODE",e[e.CRIT_TEXT_LINE=4]="CRIT_TEXT_LINE",e[e.CRIT_DETECTED_QUAD=8]="CRIT_DETECTED_QUAD",e[e.CRIT_NORMALIZED_IMAGE=16]="CRIT_NORMALIZED_IMAGE",e[e.CRIT_PARSED_RESULT=32]="CRIT_PARSED_RESULT"}(t||(t={})),function(e){e[e.IPF_BINARY=0]="IPF_BINARY",e[e.IPF_BINARYINVERTED=1]="IPF_BINARYINVERTED",e[e.IPF_GRAYSCALED=2]="IPF_GRAYSCALED",e[e.IPF_NV21=3]="IPF_NV21",e[e.IPF_RGB_565=4]="IPF_RGB_565",e[e.IPF_RGB_555=5]="IPF_RGB_555",e[e.IPF_RGB_888=6]="IPF_RGB_888",e[e.IPF_ARGB_8888=7]="IPF_ARGB_8888",e[e.IPF_RGB_161616=8]="IPF_RGB_161616",e[e.IPF_ARGB_16161616=9]="IPF_ARGB_16161616",e[e.IPF_ABGR_8888=10]="IPF_ABGR_8888",e[e.IPF_ABGR_16161616=11]="IPF_ABGR_16161616",e[e.IPF_BGR_888=12]="IPF_BGR_888",e[e.IPF_BINARY_8=13]="IPF_BINARY_8",e[e.IPF_NV12=14]="IPF_NV12"}(_||(_={}));const r="function"==typeof BigInt;var E,n;!function(e){e[e.IRUT_NULL=0]="IRUT_NULL",e[e.IRUT_COLOUR_IMAGE=1]="IRUT_COLOUR_IMAGE",e[e.IRUT_SCALED_DOWN_COLOUR_IMAGE=2]="IRUT_SCALED_DOWN_COLOUR_IMAGE",e[e.IRUT_GRAYSCALE_IMAGE=4]="IRUT_GRAYSCALE_IMAGE",e[e.IRUT_TRANSOFORMED_GRAYSCALE_IMAGE=8]="IRUT_TRANSOFORMED_GRAYSCALE_IMAGE",e[e.IRUT_ENHANCED_GRAYSCALE_IMAGE=16]="IRUT_ENHANCED_GRAYSCALE_IMAGE",e[e.IRUT_PREDETECTED_REGIONS=32]="IRUT_PREDETECTED_REGIONS",e[e.IRUT_BINARY_IMAGE=64]="IRUT_BINARY_IMAGE",e[e.IRUT_TEXTURE_DETECTION_RESULT=128]="IRUT_TEXTURE_DETECTION_RESULT",e[e.IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE=256]="IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE",e[e.IRUT_TEXTURE_REMOVED_BINARY_IMAGE=512]="IRUT_TEXTURE_REMOVED_BINARY_IMAGE",e[e.IRUT_CONTOURS=1024]="IRUT_CONTOURS",e[e.IRUT_LINE_SEGMENTS=2048]="IRUT_LINE_SEGMENTS",e[e.IRUT_TEXT_ZONES=4096]="IRUT_TEXT_ZONES",e[e.IRUT_TEXT_REMOVED_BINARY_IMAGE=8192]="IRUT_TEXT_REMOVED_BINARY_IMAGE",e[e.IRUT_CANDIDATE_BARCODE_ZONES=16384]="IRUT_CANDIDATE_BARCODE_ZONES",e[e.IRUT_LOCALIZED_BARCODES=32768]="IRUT_LOCALIZED_BARCODES",e[e.IRUT_SCALED_UP_BARCODE_IMAGE=65536]="IRUT_SCALED_UP_BARCODE_IMAGE",e[e.IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE=131072]="IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE",e[e.IRUT_COMPLEMENTED_BARCODE_IMAGE=262144]="IRUT_COMPLEMENTED_BARCODE_IMAGE",e[e.IRUT_DECODED_BARCODES=524288]="IRUT_DECODED_BARCODES",e[e.IRUT_LONG_LINES=1048576]="IRUT_LONG_LINES",e[e.IRUT_CORNERS=2097152]="IRUT_CORNERS",e[e.IRUT_CANDIDATE_QUAD_EDGES=4194304]="IRUT_CANDIDATE_QUAD_EDGES",e[e.IRUT_DETECTED_QUADS=8388608]="IRUT_DETECTED_QUADS",e[e.IRUT_LOCALIZED_TEXT_LINES=16777216]="IRUT_LOCALIZED_TEXT_LINES",e[e.IRUT_RECOGNIZED_TEXT_LINES=33554432]="IRUT_RECOGNIZED_TEXT_LINES",e[e.IRUT_NORMALIZED_IMAGES=67108864]="IRUT_NORMALIZED_IMAGES",e[e.IRUT_ALL=134217727]="IRUT_ALL"}(E||(E={})),function(e){e[e.CRIT_ORIGINAL_IMAGE=1]="CRIT_ORIGINAL_IMAGE",e[e.CRIT_BARCODE=2]="CRIT_BARCODE",e[e.CRIT_TEXT_LINE=4]="CRIT_TEXT_LINE",e[e.CRIT_DETECTED_QUAD=8]="CRIT_DETECTED_QUAD",e[e.CRIT_NORMALIZED_IMAGE=16]="CRIT_NORMALIZED_IMAGE",e[e.CRIT_PARSED_RESULT=32]="CRIT_PARSED_RESULT"}(n||(n={}));let a,I,R,T=null,i=new Set;self.cvrWorkerVersion="2.0.30";const A=e=>{for(let t in e.stageSet){const _=e.stageSet[t];for(let e=0;e<_.length;e++)if([E.IRUT_BINARY_IMAGE,E.IRUT_COLOUR_IMAGE,E.IRUT_COMPLEMENTED_BARCODE_IMAGE,E.IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE,E.IRUT_ENHANCED_GRAYSCALE_IMAGE,E.IRUT_GRAYSCALE_IMAGE,E.IRUT_SCALED_DOWN_COLOUR_IMAGE,E.IRUT_SCALED_UP_BARCODE_IMAGE,E.IRUT_TEXTURE_REMOVED_BINARY_IMAGE,E.IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE,E.IRUT_TEXT_REMOVED_BINARY_IMAGE,E.IRUT_TRANSOFORMED_GRAYSCALE_IMAGE].includes(_[e].result.unitType)){let t=_[e].result.imageData.bytes;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length)),_[e].result.imageData.bytes=t}else if([E.IRUT_CONTOURS].includes(_[e].result.unitType)){let t=_[e].result.contours,s=_[e].result.contoursOffset;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length)),s=new Uint8Array(new Uint8Array(HEAP8.buffer,s.ptr,s.length));const r=new DataView(t.buffer),E=[];for(let e=0;e<t.length;e+=4)E.push(r.getInt32(e,!0));const n=new DataView(s.buffer),a=[1];for(let e=0;e<s.length;e+=4)a.push(n.getInt32(e,!0));const I=[];for(let e=0;e<a.length-1;e++){const t={points:[]};for(let _=a[e];_<a[e+1];_+=2)t.points.push({x:E[_-1],y:E[_]});I.push(t)}_[e].result.contours=I,delete _[e].result.contoursOffset}else if([E.IRUT_LINE_SEGMENTS].includes(_[e].result.unitType)){let t=_[e].result.lineSegments;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),r=[];for(let e=0;e<t.length;e+=4)r.push(s.getInt32(e,!0));const E=[];for(let e=0;e<r.length;e+=4){const t={startPoint:{x:r[e],y:r[e+1]},endPoint:{x:r[e+2],y:r[e+3]}};E.push(t)}_[e].result.lineSegments=E}else if([E.IRUT_CANDIDATE_QUAD_EDGES].includes(_[e].result.unitType)){let t=_[e].result.candidateQuadEdges;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),r=[];for(let e=0;e<t.length;e+=4)r.push(s.getInt32(e,!0));const E=[];for(let e=0;e<r.length;e+=22){const t={startCorner:{intersection:{x:r[e],y:r[e+1]},line1:{startPoint:{x:r[e+2],y:r[e+3]},endPoint:{x:r[e+4],y:r[e+5]}},line2:{startPoint:{x:r[e+6],y:r[e+7]},endPoint:{x:r[e+8],y:r[e+9]}},type:r[e+10]},endCorner:{intersection:{x:r[e+11],y:r[e+12]},line1:{startPoint:{x:r[e+13],y:r[e+14]},endPoint:{x:r[e+15],y:r[e+16]}},line2:{startPoint:{x:r[e+17],y:r[e+18]},endPoint:{x:r[e+19],y:r[e+20]}},type:r[e+21]}};E.push(t)}_[e].result.candidateQuadEdges=E}else if([E.IRUT_CORNERS].includes(_[e].result.unitType)){let t=_[e].result.corners;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),r=[];for(let e=0;e<t.length;e+=4)r.push(s.getInt32(e,!0));const E=[];for(let e=0;e<r.length;e+=11){const t={intersection:{x:r[e],y:r[e+1]},line1:{startPoint:{x:r[e+2],y:r[e+3]},endPoint:{x:r[e+4],y:r[e+5]}},line2:{startPoint:{x:r[e+6],y:r[e+7]},endPoint:{x:r[e+8],y:r[e+9]}},type:r[e+10]};E.push(t)}_[e].result.corners=E}}},c=async(e,t)=>{const _=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_ParseRequiredResources_1(e,es(t.templateName))));for(let e=0;e<_.models.length;e++)await checkAndAutoLoadCaffeModel(_.models[e],engineResourcePaths.dcm);for(let e=0;e<_.specss.length;e++)await checkAndAutoLoadResourceBuffer(_.specss[e],engineResourcePaths.dcp+"specification/")};Object.assign(mapController,{cvr_createInstance:async(e,t)=>{try{let e=wasmImports.emscripten_bind_CvrWasm_CvrWasm_0();if(engineResourcePaths.dbr){const t=await s(engineResourcePaths.dbr+"DBR-PresetTemplates.json","text");a=t,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(e,es(t))}if(engineResourcePaths.dlr){const t=await s(engineResourcePaths.dlr+"DLR-PresetTemplates.json","text");I=t,ep(),log(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(e,es(t))))}if(engineResourcePaths.ddn){const t=await s(engineResourcePaths.ddn+"DDN-PresetTemplates.json","text");R=t,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(e,es(t))}wasmImports.emscripten_bind_CvrWasm_InitParameter_0(e);let _=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CoreWasm_GetModuleVersion_0())).CVR;i.add(e),handleTaskRes(t,{instanceID:e,version:_})}catch(e){handleTaskErr(t,e)}},cvr_initSettings:async(e,t,_)=>{let s;try{ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_InitSettings_1(_,es(e.settings))),handleTaskRes(t,{success:!0,response:s})}catch(e){handleTaskErr(t,e)}},cvr_setCrrRegistry:async(e,t,_)=>{try{i.has(_)&&(ep(),wasmImports.emscripten_bind_CvrWasm_SetCrrRegistry_1(_,es(e.receiver))),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_startCapturing:async(e,t,_)=>{let s=!1;try{ep();s=1===JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(_,es(e.templateName)))).CaptureVisionTemplates[0].OutputOriginalImage,await c(_,e),handleTaskRes(t,{success:!0,bNeedOutputOriginalImage:s})}catch(e){handleTaskErr(t,e)}},cvr_parseRequiredResources:async(e,t,_)=>{let s;try{ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_ParseRequiredResources_1(_,es(e.templateName))),handleTaskRes(t,{success:!0,resources:s})}catch(e){handleTaskErr(t,e)}},cvr_clearVerifyList:(e,t,_)=>{try{wasmImports.emscripten_bind_CvrWasm_ClearVerifyList_0(_),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_getIntermediateResult:(e,t,_)=>{let s={};try{s=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetIntermediateResult_0(_)),((e,t)=>r&&["format","possibleFormats"].includes(e)&&BigInt(t)>Number.MAX_SAFE_INTEGER?BigInt(t):t)),A(s)}catch(e){handleTaskErr(t,e)}handleTaskRes(t,{success:!0,result:s})},cvr_capture:async(e,t,_)=>{let s,E,a;await checkAndReauth(),log(`time worker get msg: ${Date.now()}`);try{let t=Date.now();await c(_,e),log("appendResourceTime: "+(Date.now()-t)),T&&(wasmImports.emscripten_bind_Destory_CImageData(T),T=null),T=wasmImports.emscripten_bind_Create_CImageData(e.bytes.length,setBufferIntoWasm(e.bytes,0),e.width,e.height,e.stride,e.format,0);let I=Date.now();log(`start worker capture: ${I}`),ep(),E=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_Capture_3(_,T,es(e.templateName),e.bScanner));let R=Date.now();log("worker time: "+(R-I)),log(`end worker capture: ${R}`),E=JSON.parse(E,((e,t)=>r&&"format"===e&&BigInt(t)>Number.MAX_SAFE_INTEGER?BigInt(t):t));let i=Date.now();log("capture result parsed: "+(i-R));for(let e=0;e<E.items.length;e++)[n.CRIT_NORMALIZED_IMAGE].includes(E.items[e].type)&&(a=E.items[e].imageData.bytes,a=new Uint8Array(new Uint8Array(HEAP8.buffer,a.ptr,a.length)),E.items[e].imageData.bytes=a);let o=Date.now();log("result new Uint8Array: "+(o-i)),e.bScanner&&(s=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetIntermediateResult_0(_)),((e,t)=>r&&["format","possibleFormats"].includes(e)&&BigInt(t)>Number.MAX_SAFE_INTEGER?BigInt(t):t)),A(s),E.intermediateResult=s);let l=Date.now();log("get intermediate result: "+(l-o)),log("after capture handle time: "+(Date.now()-R))}catch(e){return void handleTaskErr(t,e)}const I=Date.now();log(`time worker return msg: ${I}`),postMessage({type:"task",id:t,body:{success:!0,bytes:e.bytes,captureResult:E,workerReturnMsgTime:I}},[e.bytes.buffer])},cvr_outputSettings:async(e,t,_)=>{let s;try{ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(_,es(e.templateName))),handleTaskRes(t,{success:!0,settings:s})}catch(e){handleTaskErr(t,e)}},cvr_getSimplifiedSettings:async(e,t,_)=>{let s;try{ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetSimplifiedSettings_1(_,es(e.templateName))),handleTaskRes(t,{success:!0,settings:s})}catch(e){handleTaskErr(t,e)}},cvr_updateSettings:async(e,t,_)=>{let s,E;try{let n=e.settings;const a=e.templateName;r&&"object"==typeof n&&n.hasOwnProperty("barcodeSettings")&&(n.barcodeSettings.barcodeFormatIds=n.barcodeSettings.barcodeFormatIds.toString()),ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_UpdateSettings_2(_,es(a),es(JSON.stringify(n)))),ep();E=1===JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(_,es(a)))).CaptureVisionTemplates[0].OutputOriginalImage,handleTaskRes(t,{success:!0,response:s,bNeedOutputOriginalImage:E})}catch(e){handleTaskErr(t,e)}},cvr_resetSettings:async(e,t,_)=>{let s;try{wasmImports.emscripten_bind_CvrWasm_ResetSettings_0(_),ep(),a&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(_,es(a)),ep(),I&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(_,es(I)),ep(),R&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(_,es(R)),ep(),s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_InitParameter_0(_)),handleTaskRes(t,{success:!0,response:s})}catch(e){handleTaskErr(t,e)}},cvr_setIrrRegistry:async(e,t,_)=>{try{i.has(_)&&(ep(),wasmImports.emscripten_bind_CvrWasm_SetIrrRegistry_1(_,es(JSON.stringify(e.receiverObj)))),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_enableResultCrossVerification:async(e,t,_)=>{let s;try{for(let t in e.verificationEnabled)s=wasmImports.emscripten_bind_CvrWasm_EnableResultCrossVerification_2(_,Number(t),e.verificationEnabled[t]);handleTaskRes(t,{success:!0,result:s})}catch(e){handleTaskErr(t,e)}},cvr_enableResultDeduplication:async(e,t,_)=>{let s;try{for(let t in e.duplicateFilterEnabled)s=wasmImports.emscripten_bind_CvrWasm_EnableResultDeduplication_2(_,Number(t),e.duplicateFilterEnabled[t]);handleTaskRes(t,{success:!0,result:s})}catch(e){handleTaskErr(t,e)}},cvr_setDuplicateForgetTime:async(e,t,_)=>{let s;try{for(let t in e.duplicateForgetTime)s=wasmImports.emscripten_bind_CvrWasm_SetDuplicateForgetTime_2(_,Number(t),e.duplicateForgetTime[t]);handleTaskRes(t,{success:!0,result:s})}catch(e){handleTaskErr(t,e)}},cvr_getDuplicateForgetTime:async(e,t,_)=>{let s;try{s=wasmImports.emscripten_bind_CvrWasm_GetDuplicateForgetTime_1(_,e.type),handleTaskRes(t,{success:!0,time:s})}catch(e){handleTaskErr(t,e)}},cvr_setThresholdValue:async(e,t,_)=>{try{wasmImports.emscripten_bind_CvrWasm_SetThresholdValue_3(_,e.threshold,e.leftLimit,e.rightLimit),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_containsTask:async(e,t,_)=>{try{ep();const s=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_ContainsTask_1(_,es(e.templateName)));handleTaskRes(t,{success:!0,tasks:s})}catch(e){handleTaskErr(t,e)}},cvr_dispose:async(e,t,_)=>{try{i.delete(_),wasmImports.emscripten_bind_Destory_CImageData(T),T=null,wasmImports.emscripten_bind_CvrWasm___destroy___0(_),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}}})}();
